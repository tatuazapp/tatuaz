// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tatuaz.Shared.Infrastructure.DataAccess;

#nullable disable

namespace Tatuaz.Shared.Infrastructure.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20221104185225_InitialMainMigration")]
    partial class InitialMainMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_tatuaz_roles");

                    b.ToTable("tatuaz_roles", "identity");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("email");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_tatuaz_users");

                    b.ToTable("tatuaz_users", "identity");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("TatuazRoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("tatuaz_role_id");

                    b.Property<string>("TatuazUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tatuaz_user_id");

                    b.HasKey("Id")
                        .HasName("pk_tatuaz_user_roles");

                    b.HasIndex("TatuazRoleId")
                        .HasDatabaseName("ix_tatuaz_user_roles_tatuaz_role_id");

                    b.HasIndex("TatuazUserId")
                        .HasDatabaseName("ix_tatuaz_user_roles_tatuaz_user_id");

                    b.ToTable("tatuaz_user_roles", "identity");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazUserRole", b =>
                {
                    b.HasOne("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazRole", "TatuazRole")
                        .WithMany("TatuazUserRoles")
                        .HasForeignKey("TatuazRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tatuaz_user_roles_tatuaz_roles_tatuaz_role_id");

                    b.HasOne("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazUser", "TatuazUser")
                        .WithMany("TatuazUserRoles")
                        .HasForeignKey("TatuazUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tatuaz_user_roles_tatuaz_users_tatuaz_user_id");

                    b.Navigation("TatuazRole");

                    b.Navigation("TatuazUser");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazRole", b =>
                {
                    b.Navigation("TatuazUserRoles");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Models.Identity.TatuazUser", b =>
                {
                    b.Navigation("TatuazUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
