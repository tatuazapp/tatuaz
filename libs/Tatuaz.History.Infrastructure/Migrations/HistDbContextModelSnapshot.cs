// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tatuaz.History.DataAccess;

#nullable disable

namespace Tatuaz.History.DataAccess.Migrations
{
    [DbContext(typeof(HistDbContext))]
    partial class HistDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "hist_state", new[] { "added", "modified", "deleted" });
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Hist.Models.General.HistEmailInfo", b =>
                {
                    b.Property<Guid>("HistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("hist_id");

                    b.Property<string>("EmailType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email_type");

                    b.Property<string>("Error")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("error");

                    b.Property<Instant>("HistDumpedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("hist_dumped_at");

                    b.Property<int>("HistState")
                        .HasColumnType("integer")
                        .HasColumnName("hist_state");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("object_id");

                    b.Property<Instant>("OrderedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ordered_at");

                    b.Property<string>("RecipientEmail")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)")
                        .HasColumnName("recipient_email");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer")
                        .HasColumnName("retry_count");

                    b.Property<Instant?>("SentAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sent_at");

                    b.HasKey("HistId")
                        .HasName("pk_h_email_info");

                    b.ToTable("H_email_info", "H_general");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Hist.Models.Identity.HistTatuazRole", b =>
                {
                    b.Property<Guid>("HistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("hist_id");

                    b.Property<Instant>("HistDumpedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("hist_dumped_at");

                    b.Property<int>("HistState")
                        .HasColumnType("integer")
                        .HasColumnName("hist_state");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.HasKey("HistId")
                        .HasName("pk_h_tatuaz_roles");

                    b.ToTable("H_tatuaz_roles", "H_identity");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Hist.Models.Identity.HistTatuazUser", b =>
                {
                    b.Property<Guid>("HistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("hist_id");

                    b.Property<Instant>("HistDumpedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("hist_dumped_at");

                    b.Property<int>("HistState")
                        .HasColumnType("integer")
                        .HasColumnName("hist_state");

                    b.Property<string>("Id")
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)")
                        .HasColumnName("id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("username");

                    b.HasKey("HistId")
                        .HasName("pk_h_tatuaz_users");

                    b.ToTable("H_tatuaz_users", "H_identity");
                });

            modelBuilder.Entity("Tatuaz.Shared.Domain.Entities.Hist.Models.Identity.HistTatuazUserRole", b =>
                {
                    b.Property<Guid>("HistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("hist_id");

                    b.Property<Instant>("HistDumpedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("hist_dumped_at");

                    b.Property<int>("HistState")
                        .HasColumnType("integer")
                        .HasColumnName("hist_state");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)")
                        .HasColumnName("user_email");

                    b.HasKey("HistId")
                        .HasName("pk_h_tatuaz_user_roles");

                    b.ToTable("H_tatuaz_user_roles", "H_identity");
                });
#pragma warning restore 612, 618
        }
    }
}
